@page "/v/{code}/{file}"
@model BlizzTrack.Pages.ViewGameModel

@{
    ViewData["Title"] = $"{(string.IsNullOrEmpty(Model.GameConfig.Name) ? Model.Meta.GetName() : Model.GameConfig.Name )} // {GameTypeFixer.Fix(Model.Meta.Flags)}";
    
    ViewData["Description"] = "A powerful website which lets you view the versions of all the games that Blizzard Entertainment has on Battle.net!";
}

@if (Model.GameParent?.Logos?.Count > 0)
{
    var logo = Model.GameParent.Logos.FirstOrDefault(x => x.Type == "image/png");
    if (logo != null)
    { 
        @section Header {
            <meta Name="twitter:image:src" Content="@logo.URL" />
            <meta Name="og:image" Content="@logo.URL" />
            <meta Name="twitter:url" Content="@logo.URL" />
            <meta Name="og:url" Content="@logo.URL" />
        }
    }
}

<div class="row">
    <div class="col-12" aria-label="breadcrumb col-12" role="navigation">
        <ol class="breadcrumb">
            <li class="breadcrumb-item">
                <a asp-page="/Index">
                    All Games
                </a>
            </li>
            <li class="breadcrumb-item active" aria-current="page">@(string.IsNullOrEmpty(Model.GameConfig.Name) ? Model.Meta.GetName() : Model.GameConfig.Name )</li>
            <li class="breadcrumb-item active" aria-current="page">@GameTypeFixer.Fix(Model.Meta.Flags)</li>
        </ol>
    </div>

    @if (Model.GameConfig == null || Model.GameConfig.Config.Encrypted)
    {
        <div class="col-12">
            <div class="alert alert-danger" role="alert">
                <i class="fa fa-lock pr-3"></i>Hey, just so you know this game is encrypted and is most likely a developer build of the game!
            </div>
        </div>
    }
    else
    {

        <feature name="@nameof(FeatureFlags.PatchNotes)">
            @if (Model.GameParent.PatchNoteAreas?.Count > 0)
            {
                <div class="col-12">
                    <div class="card">
                        <div class="card-body pt-0 pb-0 px-0">
                            <div class="d-none d-lg-block">
                                <div class="btn-group special no-radius w-100" role="group" aria-label="...">
                                    @foreach (var item in Model.GameParent.PatchNoteAreas)
                                    {
                                        <a asp-page="/PatchNotes" asp-route-slug="@Model.GameParent.Slug" asp-route-game_type="@item" class="btn btn-outline-default text-white m-0">
                                            @GameTypeFixer.Fix(item) Patch Notes
                                        </a>
                                    }
                                </div>
                            </div>
                            <div class="d-lg-none">
                                <div class="dropdown no-radius">
                                    <button class="btn btn-secondary dropdown-toggle w-100 " type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                        Supported Patch Notes
                                    </button>
                                    <div class="dropdown-menu w-100" aria-labelledby="dropdownMenuButton">
                                        @foreach (var item in Model.GameParent.PatchNoteAreas)
                                        {
                                            <a asp-page="/PatchNotes" asp-route-slug="@Model.GameParent.Slug" asp-route-game_type="@item" class="dropdown-item">
                                                @GameTypeFixer.Fix(item) Patch Notes
                                            </a>
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </feature>
    }
    
    @if (!string.IsNullOrEmpty(Model.Alert))
    {
        <div class="col-12">
            <div class="alert alert-info" role="alert">
                <i class="fa fa-bullhorn pr-3"></i>Blizzard: @Model.Alert
            </div>
        </div>
    }

    @{
        switch (Model.Manifest)
        {
            case List<Core.Models.Manifest<BNetLib.Models.Versions[]>> ver:
                await Html.RenderPartialAsync($"_view_{Model.Meta.Flags.ToLower()}", ver);
                break;
            case List<Core.Models.Manifest<BNetLib.Models.BGDL[]>> ver:
                await Html.RenderPartialAsync($"_view_{Model.Meta.Flags.ToLower()}", ver);
                break;
            default:
                @("Unknown state")
                break;
        }
    }
</div>