@model List<Core.Models.Manifest<BNetLib.Models.Versions[]>>
@{
}

<div class="col-sm-12">
    <div class="card ">
        <div class="card-header">
            <div class="col-sm-12 text-left">
                <h2 class="card-title">Current Seqn</h2>
                <div class="card-category">@Model.First().Seqn was indexed on 
                    <time>
                        @Model.First().Indexed.ToString("ddd, dd MMM yyyy hh:mm:ss ") GMT
                    </time></div>
            </div>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table tablesorter table-hover ps" id="">
                    <thead class=" text-primary">
                        <tr>
                            <th>
                                Region
                            </th>
                            <th>
                                Version
                            </th>
                            <th>
                                Build Config
                            </th>
                            <th>
                                CDN Config
                            </th>
                            <th>
                                Product Config
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model.First().Content.Length > 0)
                        {
                            @foreach (var item in Model.First().Content)
                            {
                                <tr>
                                    <td>@item.GetName()</td>
                                    <td class="@(item.Versionsname != Model.Last().Content.FirstOrDefault(x => x.Region == item.Region)?.Versionsname ? "has-changed-data" : "")">
                                        @item.Versionsname
                                    </td>
                                    <td class="@(item.Buildconfig != Model.Last().Content.FirstOrDefault(x => x.Region == item.Region)?.Buildconfig ? "has-changed-data" : "")">
                                        @item.Buildconfig
                                    </td>
                                    <td class="@(item.Cdnconfig != Model.Last().Content.FirstOrDefault(x => x.Region == item.Region)?.Cdnconfig ? "has-changed-data" : "")">
                                        @item.Cdnconfig
                                    </td>
                                    <td class="@(item.Productconfig != Model.Last().Content.FirstOrDefault(x => x.Region == item.Region)?.Productconfig ? "has-changed-data" : "")">
                                        @(item.Productconfig == "versions" ? "N/A" : item.Productconfig)
                                    </td>
                                </tr>
                            }
                        } else
                        {
                            <tr>
                                <td colspan="5" class="text-center my-3" style="font-size: large">
                                    <i class="fas fa-times mr-1"></i> Empty Manifest
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>
<div class="col-sm-12">
    <div class="card ">
        <div class="card-header">
            <div class="col-sm-12 text-left">
                <h2 class="card-title">Previous Seqn</h2>
                <div class="card-category">@Model.Last().Seqn was indexed on 
                    <time>
                        @Model.Last().Indexed.ToString("ddd, dd MMM yyyy hh:mm:ss ") GMT
                    </time></div>
            </div>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table tablesorter table-hover ps" id="">
                    <thead class="text-primary">
                        <tr>
                            <th>
                                Region
                            </th>
                            <th>
                                Version
                            </th>
                            <th>
                                Build Config
                            </th>
                            <th>
                                CDN Config
                            </th>
                            <th>
                                Product Config
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.Last().Content)
                        {
                            <tr>
                                <td>@item.GetName()</td>
                                <td class="@(item.Versionsname != Model.First().Content.FirstOrDefault(x => x.Region == item.Region)?.Versionsname ? "has-changed-data" : "")">
                                    @item.Versionsname
                                </td>
                                <td class="@(item.Buildconfig != Model.First().Content.FirstOrDefault(x => x.Region == item.Region)?.Buildconfig ? "has-changed-data" : "")">
                                    @item.Buildconfig
                                </td>
                                <td class="@(item.Cdnconfig != Model.First().Content.FirstOrDefault(x => x.Region == item.Region)?.Cdnconfig ? "has-changed-data" : "")">
                                    @item.Cdnconfig
                                </td>
                                <td class="@(item.Productconfig != Model.First().Content.FirstOrDefault(x => x.Region == item.Region)?.Productconfig ? "has-changed-data" : "")">
                                    @(item.Productconfig == "versions" ? "N/A" : item.Productconfig)
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>