@page "/patch-notes/{slug}/{game_type}"
@model BlizzTrack.Pages.PatchNotesModel

@using static Core.Extensions.SlugExtension;

@{
    if(Model.GameParent == null)
    {
        return;
    }

    ViewData["Title"] = $"{Model.GameParent.Name} // {GameTypeFixer.Fix(Model.GameType)} Patch Notes";
}

@if (Model.GameParent?.Logos?.Count > 0)
{
    @section Header {
        <link rel="alternate" type="application/rss+xml" title="@ViewData["Title"]" href="@Url.Action("Get", "rss", new { slug = Model.GameParent.Slug, type = Model.GameType.ToLower() }, HttpContext.Request.Scheme)" />

        @{
            var logo = Model.GameParent.Logos.FirstOrDefault(x => x.Type == "image/png");

            if (logo != null)
            {
                    <meta Name="twitter:image:src" Content="@logo.URL" />
                    <meta Name="og:image" Content="@logo.URL" />
                    <meta Name="twitter:url" Content="@logo.URL" />
                    <meta Name="og:url" Content="@logo.URL" />
            }
        }
    }
}

<div class="row">
    <div class="col-12" aria-label="breadcrumb col-12" role="navigation">
        <ol class="breadcrumb">
            <li class="breadcrumb-item">
                <a asp-page="/Index">
                    All Games
                </a>
            </li>
            <li class="breadcrumb-item active" aria-current="page">@Model.GameParent.Name</li>
            <li class="breadcrumb-item active" aria-current="page">@GameTypeFixer.Fix(Model.GameType)</li>
            <li class="breadcrumb-item active" aria-current="page">
                <a asp-controller="rss" asp-action="Get" asp-route-slug="@Model.GameParent.Slug" asp-route-type="@Model.GameType.ToLower()">
                    <i class="fas fa-rss mr-1"></i> RSS Feed
                </a>
            </li>
        </ol>
    </div>

    <div class="col-12">
        <div class="card mb-3">
            <feature name="@nameof(Helpers.FeatureFlags.PatchNotes)">
                @if (Model.GameParent.PatchNoteAreas?.Count > 1)
                {
                    <div class="card-body py-0 px-0">
                        <div class="d-none d-lg-block">
                            <div class="btn-group special" role="group" aria-label="...">
                                @foreach (var item in Model.GameParent.PatchNoteAreas)
                                {
                                    <a asp-page="/PatchNotes" asp-route-slug="@Model.GameParent.Slug" asp-route-game_type="@item"
                                       class="btn btn-outline-light m-0 text-white @(item.Equals(Model.GameType, StringComparison.OrdinalIgnoreCase) ? "active" : "")">
                                        @GameTypeFixer.Fix(item) Patch Notes
                                    </a>
                                }
                            </div>
                        </div>
                        <div class="d-lg-none">
                            <div class="dropdown no-radius d-lg-block mb-0">
                                <button class="btn btn-secondary dropdown-toggle w-100 m-0" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                    Supported Patch Notes
                                </button>
                                <div class="dropdown-menu w-100" aria-labelledby="dropdownMenuButton">
                                    @foreach (var item in Model.GameParent.PatchNoteAreas)
                                    {
                                        <a asp-page="/PatchNotes" asp-route-slug="@Model.GameParent.Slug" asp-route-game_type="@item" class="dropdown-item">
                                            @GameTypeFixer.Fix(item) Patch Notes
                                        </a>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </feature>
        </div>
    </div>

    @if (!string.IsNullOrEmpty(Model.Alert))
    {
        <div class="col-12">
            <div class="alert alert-danger" role="alert">
                <i class="fa fa-bullhorn pr-3"></i> @Model.Alert
            </div>
        </div>
    }

    <div class="col-12 d-lg-none">
        <div class="card mb-3">
            <div class="dropdown no-radius d-lg-block mb-0">
                <button class="btn btn-secondary dropdown-toggle w-100 m-0" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    Patch Note Builds
                </button>
                <div class="dropdown-menu w-100" aria-labelledby="dropdownMenuButton">
                    @foreach (var build in Model.BuildList)
                    {
                        <a asp-page="/PatchNotes" asp-route-slug="@Model.GameParent.Slug" asp-route-game_type="@Model.GameType" asp-route-build_time="@build.Created.Ticks" class="dropdown-item">
                            @if (Model.PatchNotes.Created == build.Created)
                            {
                                <i class="tim-icons fa fa-angle-right"></i>
                            }
                            <time data-format="lll">@build.Created.ToString("ddd, dd MMM yyyy hh:mm:ss ") GMT</time>
                        </a>
                    }
                </div>
            </div>
        </div>
    </div>


    <div class="col-2 d-none d-xl-block">
        <div class="card bg-transparent mb-2" style="box-shadow: none;">
            <div class="card-header px-1">
                <div class="col-sm-12 text-left">
                    <h2 class="card-title">
                        All Builds
                    </h2>
                </div>
            </div>
            <div class="card-body px-1">
                <ul class="nav flex-column build-list">
                    @foreach (var build in Model.BuildList)
                    {
                        <li class="nav-item">
                            <a asp-page="/PatchNotes" asp-route-slug="@Model.GameParent.Slug" asp-route-game_type="@Model.GameType" asp-route-build_time="@build.Created.Ticks" class="nav-link @(build.Created == Model.PatchNotes.Created ? "active" : "")">
                                @if (Model.PatchNotes.Created == build.Created)
                                {
                                    <i class="tim-icons fa fa-angle-right"></i>
                                }
                                <time data-format="lll">@build.Created.ToString("ddd, dd MMM yyyy hh:mm:ss ") GMT</time>
                            </a>
                        </li>
                    }
                </ul>
            </div>
        </div>
    </div>

    <div class="col">
        @if (!string.IsNullOrEmpty(Model.PatchNotes.Details))
        {
            <div class="card">
                <div class="card-body patch-notes">
                    @Html.Raw(Model.PatchNotes.Details)
                </div>
            </div>
        }
        else
        {
            @if (Model.PatchNotes.HeroUpdates != null)
            {
                foreach (var change in Model.PatchNotes.HeroUpdates)
                {
                    <div class="card bg-transparent mb-2" style="box-shadow: none;" id="@change.Title.Slugify()">
                        <div class="card-header">
                            <div class="col-sm-12 text-left">
                                <h2 class="card-title">
                                    @change.Title <small style="font-size: x-small"><a href="#@change.Title.Slugify()"><i class="fas fa-anchor"></i></a></small>
                                </h2>
                                <h5 class="card-category">@change.Description</h5>
                            </div>
                        </div>

                        <div class="card-body">
                            @foreach (var update in change.Heroes.Select(x => x.HeroChanges))
                            {
                                // https://cdn.blizztrack.com/overwatch/heroes/

                                <div class="card mb-2" id="@update.HeroName.Slugify()">
                                    <div class="card-header border-0 pt-3 pb-1 d-flex align-items-center">
                                        <img src="@($"https://cdn.blizztrack.com/overwatch/heroes/{update.Metadata.AssetGuid}.png")" class="mr-3" width="45">

                                        <div class="text-left">
                                            <h2 class="card-title mb-0">@update.HeroName <small style="font-size: x-small"><a href="#@update.HeroName.Slugify()"><i class="fas fa-anchor"></i></a></small></h2>
                                            <blockquote class="card-category text-white">
                                                @update.DevComment
                                            </blockquote>
                                        </div>
                                    </div>

                                    <div class="card-body text-white px-1 py-1">
                                        @Html.Raw(BlizzTrack.Helpers.Markdown.Parse(update.ChangeDescription))
                                    </div>

                                    @if (update.Abilities.Count > 0)
                                    {
                                        <div class="card-body text-white py-1">
                                            @foreach (var ability in update.Abilities.Select(x => x.AbilityChanges))
                                            {
                                                <div class="card bg-transparent pl-3 m-0 py-0 pt-0" style="box-shadow: none">
                                                    <div class="card-header border-0 pt-1 pb-1 d-flex align-items-center">
                                                        <div class="PatchIcon-Holder">
                                                            <img class="PatchIcon mr-3" src="@($"https://cdn.blizztrack.com/overwatch/abilities/{ability.Metadata.IconGuid}.png")" width="30">
                                                        </div>
                                                        <div class="text-left">
                                                            <h2 class="card-title mb-0 AbilityTitle">@ability.AbilityName</h2>
                                                            <blockquote class="card-category">
                                                                @ability.DevComment
                                                            </blockquote>
                                                        </div>
                                                    </div>
                                                    <div class="card-body pl-5 py-0">
                                                        @Html.Raw(BlizzTrack.Helpers.Markdown.Parse(ability.ChangeDescription))
                                                    </div>
                                                </div>
                                            }
                                        </div>
                                    }
                                </div>
                            }
                        </div>
                    </div>
                }
            }

            @if (Model.PatchNotes.GenericUpdates != null)
            {
                foreach (var change in Model.PatchNotes.GenericUpdates)
                {
                    <div class="card bg-transparent mb-2" style="box-shadow: none;" id="@change.Title.Slugify()">
                        <div class="card-header">
                            <div class="col-sm-12 text-left">
                                @if (!string.IsNullOrWhiteSpace(change.Title))
                                {
                                    <h2 class="card-title">
                                        @change.Title <small style="font-size: x-small"><a href="#@change.Title.Slugify()"><i class="fas fa-anchor"></i></a></small>
                                    </h2>
                                }
                                <h5 class="card-category">@change.Description</h5>
                            </div>
                        </div>

                        <div class="card-body">
                            @foreach (var update in change.Updates.Select(x => x.UpdateChanges))
                            {
                                <div class="card mb-2" id="@update.Title.Slugify()">
                                    <div class="card-header">
                                        <div class="col-sm-12 text-left">
                                            @if (!string.IsNullOrEmpty(update.Title))
                                            {
                                                <h2 class="card-title AbilityTitle">@update.Title <small style="font-size: x-small"><a href="#@update.Title.Slugify()"><i class="fas fa-anchor"></i></a></small></h2>
                                            }
                                            <blockquote class="card-category">@update.DevComment</blockquote>
                                        </div>
                                    </div>

                                    <div class="card-body text-white py-1">
                                        @Html.Raw(BlizzTrack.Helpers.Markdown.Parse(update.Description))
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                }
            }
        }
    </div>
</div>
