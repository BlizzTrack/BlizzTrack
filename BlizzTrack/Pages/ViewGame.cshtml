@page "/v/{code}/{file}"
@model BlizzTrack.Pages.ViewGameModel

@{
    ViewData["Title"] = $"{BNetLib.Helpers.GameName.Get(Model.Meta.Product)} // {Model.Meta.Flags}";
}

@if (Model.GameParent.Logos?.Count > 0)
{
    var logo = Model.GameParent.Logos.FirstOrDefault(x => x.Type == "image/png");
    if (logo != null)
        @section Header {
            <meta Name="twitter:image:src" Content="@logo.URL" />
            <meta Name="og:image" Content="@logo.URL" />
            <meta Name="twitter:url" Content="@logo.URL" />
            <meta Name="og:url" Content="@logo.URL" />
        }
}

<div class="row">
    <div class="col-12" aria-label="breadcrumb col-12" role="navigation">
        <ol class="breadcrumb">
            <li class="breadcrumb-item">
                <a asp-page="/Index">
                    All Games
                </a>
            </li>
            <li class="breadcrumb-item active" aria-current="page">@BNetLib.Helpers.GameName.Get(Model.Meta.Product)</li>
            <li class="breadcrumb-item active" aria-current="page">@Model.Meta.Flags</li>
        </ol>
    </div>

    @if (Model.GameConfig == null || Model.GameConfig.Config.Encrypted)
    {
        <div class="col-12">
            <div class="alert alert-danger" role="alert">
                <i class="fa fa-lock pr-3"></i>Hey, just so you know this game is encrypted and is most likely a developer build of the game!
            </div>
        </div>
    }

    @if (!string.IsNullOrEmpty(Model.Alert))
    {
        <div class="col-12">
            <div class="alert alert-info" role="alert">
                <i class="fa fa-bullhorn pr-3"></i>Blizzard: @Model.Alert
            </div>
        </div>
    }
    @{
        switch (Model.Manifest)
        {
            case List<Core.Models.Manifest<BNetLib.Models.Versions[]>> ver:
                await Html.RenderPartialAsync($"_view_{Model.Meta.Flags.ToLower()}", ver);
                break;
            case List<Core.Models.Manifest<BNetLib.Models.BGDL[]>> ver:
                await Html.RenderPartialAsync($"_view_{Model.Meta.Flags.ToLower()}", ver);
                break;
            default:
                @("Unknown state")
                break;
        }
    }
</div>